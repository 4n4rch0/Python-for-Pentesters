# @AUTHOR: 4N4NRCH0
# Python can be used to build a simple ICMP (Internet Control Message Protocol) scanner to identify potential targets on the network.
# However, ICMP packets can be monitored or blocked as the target organization would not expect a regular user to “ping a server”.
# These are the main reasons why using the ARP (Address Resolution Protocol) to identify targets on the local network is more effective.

import pyfiglet, sys
from colorama import init, Fore, Back
from scapy.all import *

def banner(titel):
    init()
    print(Fore.RED+"*"*71+Fore.RESET)
    print(22*"-"+"\tCREATED BY 4N4RCH0\t"+"-"*22)
    print(Back.BLACK+Fore.RED+pyfiglet.figlet_format(titel, font="poison")+Back.RESET+Fore.RESET)
    print(Fore.RED+"*"*71+Fore.RESET)
    

banner("4RPSC4N")

try:

    interface = "Ethernet 2"
    ip_range = input("[ ? ] Enter your local ip range (f.e. 192.168.0.1/24): ")
    broadcastMac = "ff:ff:ff:ff:ff:ff"

    packet = Ether(dst=broadcastMac)/ARP(pdst = ip_range)

    ans, unans = srp(packet, timeout =2, iface=interface, inter=0.1)

    for send,receive in ans:
        print(receive.sprintf(r"%Ether.src% - %ARP.psrc%"))
        
except KeyboardInterrupt:
    sys.exit()
    
except Exception as e:
    print(f"[ERROR]\t{e}")