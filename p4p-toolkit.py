# @AUTHOR: 4N4NRCH0
# This toolkit contains any code of the mentioned THM room as fully automated python application.
# The code demonstrates the automation of python code snippets to make tasks and procedures more efficient.
# In a security engagement it can be a big advantage to prepare useful scripts all together in one toolkit.
# This application is a demonstration, based on the "Python for Pentesters" room.

import os
import sys
import requests
import pyfiglet
import keyboard
import socket
import paramiko
import hashlib
from colorama import init, Fore, Back

def banner(titel):
    init()
    print(Fore.RED+"*"*65+Fore.RESET)
    print(17*"-"+"\tCREATED BY 4N4RCH0\t"+"-"*17)
    print(Back.BLACK+Fore.RED+pyfiglet.figlet_format(titel, font="avatar")+Back.RESET+Fore.RESET)
    print(Fore.RED+"*"*65+Fore.RESET)

class Webattacks:
    
    def __init__(self):
        pass
    
    def subdir_enumerate(self):
        pass
    
    def directory_enumerate(self):
        pass
    
    def download_file(self):
        pass

class Networkattacks:
    
    def __init__(self):
        pass
    
    def port_scan(self):
        pass

class Passwordattacks:
    
    def __init__(self):
        pass
    
    def hash_crack(self):
        pass
    
    def ssh_brute_force(self):
        pass

class Postexploitation:
    
    def __init__(self):
        pass
    
    def key_log(self):
        pass

class p4p_menu:
    
    def __init__(self):
        pass
    
    def user_menu(self):
        pass

def main():
    
    try:
        banner(" P4P-Toolkit ")

        load_menu = p4p_menu()
        load_menu.user_menu()

    except KeyboardInterrupt:
        sys.exit()

    except Exception as e:
        print(e)
        sys.exit()
    
if __name__ == '__main__':

    main()